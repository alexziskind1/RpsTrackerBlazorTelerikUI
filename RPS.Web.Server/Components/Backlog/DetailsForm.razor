<EditForm Model="Model" OnValidSubmit="@HandleValidSubmit">

    <div class="form-group row">
        <label for="title" class="col-sm-2 col-form-label">Title</label>
        <div class="col-sm-10">

            <TelerikTextBox @bind-Value="Model.Title" Width="100%"></TelerikTextBox>
        </div>
    </div>

    <div class="form-group row">
        <label for="description" class="col-sm-2 col-form-label">Description</label>
        <div class="col-sm-10">
            <InputTextArea id="description" @bind-Value="Model.Description" class="k-textbox k-state-valid rps-text-area" />
        </div>
    </div>

    <div class="form-group row">
        <label for="estimate" class="col-sm-2 col-form-label">Estimate</label>
        <div class="col-sm-10">
            <TelerikNumericTextBox Id="estimate" Max="20" Min="1" Step="1" @bind-Value="Model.Estimate"></TelerikNumericTextBox>
        </div>
    </div>

    <div class="form-group row">
        <label for="type" class="col-sm-2 col-form-label">Type</label>
        <div class="col-sm-10">
            <TelerikDropDownList Id="type" Data="@Model.ItemTypes" @bind-Value="Model.SelectedItemType">
            </TelerikDropDownList>
        </div>
    </div>

    <div class="form-group row">
        <label for="status" class="col-sm-2 col-form-label">Status</label>
        <div class="col-sm-10">
            <TelerikDropDownList Id="status" Data="@Model.Statuses" @bind-Value="Model.SelectedStatus">
            </TelerikDropDownList>
        </div>
    </div>

    <div class="form-group row">
        <label for="priority" class="col-sm-2 col-form-label">Priority</label>
        <div class="col-sm-10">
            <TelerikDropDownList Id="priority" Data="@Model.Priorities" @bind-Value="Model.SelectedPriority">
            </TelerikDropDownList>
        </div>
    </div>

    <div class="form-group row">
        <label for="assignee" class="col-sm-2 col-form-label">Assignee</label>
        <div class="col-sm-10">
            <TelerikDropDownList Id="assignee" Data="@Model.Users" @bind-Value="Model.SelectedAssigneeId" TextField="FullName" ValueField="Id">
            </TelerikDropDownList>
        </div>
    </div>

    <div class="form-group row">
        <label for="attachment" class="col-sm-2 col-form-label">Attachment</label>
        <div class="offset-sm-2 col-sm-10">
            <TelerikUpload SaveUrl="@SaveUrl"
                           SaveField="file"
                           OnSelect="@OnSelectHandler"
                           AllowedExtensions="@( new List<string>() { ".jpg", ".png", ".jpeg" } )"
                           >
            </TelerikUpload>
        </div>
    </div>


    <div class="form-group row">
        <div class="offset-sm-2 col-sm-10">
            <DataAnnotationsValidator />
            <ValidationSummary />
        </div>
    </div>

    <div class="form-group row">
        <div class="offset-sm-2 col-sm-10">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>

</EditForm>


<div>
    <NavLink href="Backlog">Back to List</NavLink>
</div>

@code {
    public string SaveUrl => ToAbsoluteUrl("api/upload/save");

    public string ToAbsoluteUrl(string url)
    {
        return $"{NavigationManager.BaseUri}{url}";
    }

    Dictionary<string, bool> FilesValidationInfo { get; set; } = new Dictionary<string, bool>();

    void OnSelectHandler(UploadSelectEventArgs e)
    {
        foreach (var item in e.Files)
        {
            if (!FilesValidationInfo.Keys.Contains(item.Id))
            {
                // nothing is assumed to be valid until the server returns an OK
                FilesValidationInfo.Add(item.Id, IsSelectedFileValid(item));
            }

        }

        bool IsSelectedFileValid(Telerik.Blazor.Components.Upload.UploadFileInfo file)
        {
            return !(file.InvalidExtension || file.InvalidMaxFileSize || file.InvalidMinFileSize);
        }

    }
}